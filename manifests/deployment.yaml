apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: recurrant
  name: recurrant
  namespace: recurrant
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: recurrant
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: recurrant
    spec:
      containers:
        - image: "quay.io/vrutkovs/recurrant:master"
          imagePullPolicy: Always
          name: recurrant
          envFrom:
            - secretRef:
                name: recurrant
          ports:
            - containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          workingDir: /tmp/git
          volumeMounts:
            - name: git-repo
              mountPath: /tmp/git
        - name: git-sync
          image: k8s.gcr.io/git-sync:v3.1.2
          args:
            - --repo=$(GIT_SYNC_REPO)
            - --branch=$(GIT_SYNC_REF)
            - --dest=$(GIT_SYNC_CHECKOUT)
            - --wait=$(GIT_SYNC_WAIT)
            - --webhook-url=http://localhost:8080/apply
            - --webhook-timeout=$(GIT_SYNC_WEBHOOK_TIMEOUT)
            - --webhook-backoff=0s
          envFrom:
            - secretRef:
                name: recurrant
          resources: {}
          volumeMounts:
            - name: git-repo
              mountPath: /tmp/git
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: gitops-robot
      securityContext: {}
      terminationGracePeriodSeconds: 30
      shareProcessNamespace: true
      volumes:
        - name: git-repo
          emptyDir: {}
